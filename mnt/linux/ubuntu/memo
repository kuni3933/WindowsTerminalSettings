#!/bin/bash

# -----------------------------------------------------------------------#
#https://ytyaru.hatenablog.com/entry/2020/02/03/111111
readonly USERPROFILE=${HOME}
readonly CURRENT_DIR="$(
  cd "$(dirname "${BASH_SOURCE:-0}")"
  pwd
)"
readonly SRC_DIR="${CURRENT_DIR}/.config"
readonly SRC_FILES=(
	"$(find "${SRC_DIR}" -type f)"
)
readonly DEST_DIR="${USERPROFILE}/.config"
readonly dotfile_DIR=$(cd ${CURRENT_DIR} && cd ../../../ && pwd)
readonly Go_VER="1.16.5"
readonly Py_VER="3.9.6"
# ------------------------------------------------------------------------#
_title() {
  echo ""
  echo "-----------------------------------------------------------------#"
  echo "# $1"
  echo "-----------------------------------------------------------------#"
}
_section() {
  echo ""
  echo ""
  echo ""
  echo "###########################################################################################"
  echo "#    $1"
  echo "###########################################################################################"
}
_saptin() {
  if [ $# -ne 1 ]; then
    echo "Error : Argument Error/引数エラー"
    echo "       \"sudo apt install\" に必要な1個の引数が必要です。" 1>&2
    echo "       One argument required for \"sudo apt install\"." 1>&2
    exit 1
  else
    sudo apt install -y ${1}
  fi
}
_aptshow() {
  if [ $# -ne 1 ]; then
    echo "Error : Argument Error/引数エラー"
    echo "       \"sudo apt install\" に必要な1個の引数が必要です。" 1>&2
    echo "       One argument required for \"sudo apt install\"." 1>&2
    exit 1
  else
    apt show ${1}
  fi
}
_install_dein() {
  readonly DEIN_CACHE_DIR="${HOME}/.cache/dein"
  readonly DEIN_INSTALLER="/tmp/dein_installer.sh"
  curl -sL https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh >"${DEIN_INSTALLER}"
  chmod +x "${DEIN_INSTALLER}"
  "${DEIN_INSTALLER}" "${DEIN_CACHE_DIR}"
}
_install_packages() {
  :
  #sudo apt install <"${CURRENT_DIR}/PKGLIST"
}
_set_symlinks() {
  for src in ${SRC_FILES[@]}; do
    dest="${src/${SRC_DIR}/${DEST_DIR}/}"

    dest_dir="$(dirname "${dest}")"
    _verbose "Create directory: ${dest_dir}"
    mkdir -p "${dest_dir}"

    _verbose "Create symlink:   ${src} --> ${dest}"
    sudo ln -sf "${src}" "${dest}"
  done
}
_main() {
  #_section "_banner "Install packages""
  #_install_packages
  #_info "Finished packages installation!"

  _banner "Install config files"
  _set_symlinks
  _info "Finished config files installation!"

  _banner "Install dein.vim"
  _install_dein
  _info "Finished dein.vim installation!"
}
_verbose() {
  printf "[ \e[34;1mVERBOSE\e[m ] %s\n" "${*}"
}
_info() {
  printf "[ \e[36;1mINFO\e[m ] %s\n" "${*}"
}
_err() {
  printf "[ \e[31;1mERR\e[m ] %s\n" "${*}"
}
_banner() {
  echo -e "
\e[1m#####################################\e[m
\e[1m# ${*} \e[m
\e[1m#####################################\e[m
"
}

#------------------------------------------------------------------------#
#_section"00"
#------------------------------------------------------------------------#
if [ -e ${USERPROFILE}/.config ]; then
  :
else
  cd ${USERPROFILE}
  mkdir .config
  cd ${CURRENT_DIR}
fi
cd ${CURRENT_DIR}
echo "USERPROFILE : ${USERPROFILE}"
echo "dotfile_DIR : ${dotfile_DIR}"
echo "CURRENT_DIR : ${CURRENT_DIR}"
echo "SRC_DIR     : ${SRC_DIR}"
echo "SRC_FILES   : "
echo ${SRC_FILES}
echo "DEST_DIR    : ${DEST_DIR}"
echo "Go_VERSION  : ${Go_VER}"
echo "Py_VERSION  : ${Py_VER}"

_main "${@}"

_saptin "
cargo install alacritty 
arandr 
aria2 
autoconf 
automake 
base 
bash-completion 
bat 
bc 
binutils 
bison 
ccze 
cmake 
cmatrix 
cmus 
dialog 
dmenu 
docker 
docker-compose 
dosfstools 
dunst 
efibootmgr 
etckeeper 
cargo install exa 
    #expac 
fakeroot 
    #fcitx-configtool 
fcitx-mozc 
    fcitx-qt5 
fcitx-skk 
cargo install fd
figlet 
file 
findutils 
firefox 
fish 
flameshot 
flex 
fzf 
gawk 
gcc 
    gcolor2 
gettext 
git 
    github-cli 
grc 
grep 
groff 
  grub 
  gvim 
gzip 
hexyl 
i3-gaps 
  i3status-rust 
imagemagick 
ipython3 
keepassxc 
  kvantum-qt5 
libtool 
light-locker 
lightdm 
lightdm-gtk-greeter 
lightdm-gtk-greeter-settings 
  linux-zen 
  linux-zen-headers 
lxappearance 
m4 
make 
man-db 
  man-pages 
most 
mpv 
  namcap 
neofetch 
neovim 
neovim-qt 
newsboat 
nitrogen 
  noto-fonts-emoji 
  onefetch 
p7zip 
pacman 
papirus-icon-theme 
paprefs 
patch 
pavucontrol 
pkgconf 
pulseaudio 
  pulseaudio-alsa 
pulseaudio-equalizer 
pulsemixer 
  python-pastel 
  python-pip 
qt5ct 
  qtile 
ranger 
rofi 
  rofi-calc 
  rofimoji 
screenkey 
sed 
  shfmt 
simplescreenrecorder 
sl 
sudo 
sxiv 
  systemd-ui 
  terminus-font 
texinfo 
thunar 
thunar-archive-plugin 
tig 
tldr 
tmux 
translate-shell 
  ttf-roboto 
  ueberzug 
unzip 
  vimiv 
virtualbox-guest-utils 
  volumeicon 
w3m 
wget 
  which 
xdotool 
xfce4-terminal 
  xorg-server 
  xorg-server-xephyr 
  xorg-xdpyinfo 
  xorg-xrdb 
xsel 
  yq 
  zathura-pdf-mupdf 
zsh 
zsh-autosuggestions 
  zsh-completions 
  zsh-history-substring-search 
  zsh-lovers 
zsh-syntax-highlighting
"
